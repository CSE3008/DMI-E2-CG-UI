{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar initialState = {\n  flag: false,\n  flagTwo: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'FLAG_TRUE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        flag: true\n      });\n    case 'FLAG_FALSE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        flag: false\n      });\n    case 'FLAG_TWO_TRUE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        flagTwo: true\n      });\n    case 'FLAG_TWO_FALSE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        flagTwo: false\n      });\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["initialState","flag","flagTwo","state","action","type"],"sources":["C:/Users/Erik/Desktop/react-native-two/react/src/components/redux/reducers/FlagReducer.js"],"sourcesContent":["const initialState = {\r\n    flag: false,\r\n    flagTwo: false\r\n};\r\n   \r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case 'FLAG_TRUE':\r\n        return {\r\n          ...state,\r\n          flag: true,\r\n        };      \r\n      case 'FLAG_FALSE':\r\n        return {\r\n          ...state,\r\n          flag: false,\r\n        };                \r\n      case 'FLAG_TWO_TRUE':\r\n        return {\r\n          ...state,\r\n          flagTwo: true,\r\n        };      \r\n      case 'FLAG_TWO_FALSE':\r\n        return {\r\n          ...state,\r\n          flagTwo: false,\r\n        };                \r\n      default:\r\n        return state;\r\n    }\r\n};"],"mappings":";;;AAAA,IAAMA,YAAY,GAAG;EACjBC,IAAI,EAAE,KAAK;EACXC,OAAO,EAAE;AACb,CAAC;AAED,gBAAe,YAAkC;EAAA,IAAjCC,KAAK,uEAAGH,YAAY;EAAA,IAAEI,MAAM;EACxC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,uCACKF,KAAK;QACRF,IAAI,EAAE;MAAI;IAEd,KAAK,YAAY;MACf,uCACKE,KAAK;QACRF,IAAI,EAAE;MAAK;IAEf,KAAK,eAAe;MAClB,uCACKE,KAAK;QACRD,OAAO,EAAE;MAAI;IAEjB,KAAK,gBAAgB;MACnB,uCACKC,KAAK;QACRD,OAAO,EAAE;MAAK;IAElB;MACE,OAAOC,KAAK;EAAC;AAErB,CAAC"},"metadata":{},"sourceType":"module"}